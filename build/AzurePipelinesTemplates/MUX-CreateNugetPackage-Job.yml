parameters:
# Extract the build revision number from Build.BuildNumber. This is needed to pass to build-nupkg
  jobName: ''
  dependsOn: ''
  buildOutputDir: '$(Build.SourcesDirectory)\BuildOutput'
  nupkgdir: '$(build.ArtifactStagingDirectory)'
  publishPath: '$(build.ArtifactStagingDirectory)'

jobs:
- job: ${{ parameters.jobName }}
  dependsOn:
    - ${{ parameters.dependsOn }}

  steps:
    # Extract the build revision number from Build.BuildNumber. This is needed to pass to build-nupkg
  - powershell: |
      $revision = $env:BUILD_BUILDNUMBER.substring($env:BUILD_BUILDNUMBER.length - 3, 3)
      Write-Host "##vso[task.setvariable variable=buildrevision]$revision"
    displayName: 'Get build revision number'
  
  - ${{if system.debug }}:
    - script: |
        echo parameters.jobName '${{ parameters.jobName }}'
        echo parameters.buildOutputDir '${{ parameters.buildOutputDir }}'
        echo parameters.nupkgdir '${{ parameters.nupkgdir }}'
        echo parameters.publishPath '${{ parameters.publishPath }}'
        echo buildrevision=$(buildrevision)
      displayName: 'CreateNugetPackage: Display parameters'

  - task: DownloadBuildArtifacts@0 
    inputs: 
      artifactName: drop 
      downloadPath: '${{ parameters.buildOutputDir }}'

  - template: MUX-InstallNuget-Steps.yml

  - task: powershell@2
    displayName: 'build-nupkg.ps1'
    inputs:
      targetType: filePath
      filePath: build\NuSpecs\build-nupkg.ps1
      arguments: -BuildOutput '${{ parameters.buildOutputDir }}\drop' -OutputDir '${{ parameters.nupkgdir }}' -prereleaseversion prerelease -Subversion '$(buildrevision)' -SkipFrameworkPackage

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: nupkg'
    inputs:
      PathtoPublish: '${{ parameters.publishPath }}'
      artifactName: 'drop'
